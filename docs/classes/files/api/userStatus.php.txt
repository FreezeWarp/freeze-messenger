<?php
/* FreezeMessenger Copyright Â© 2017 Joseph Todd Parsons

 * This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>. */


/**
 * Represents a "user status" object in some context, performing user status updates/pings and retrieval of online users, depending on HTTP request:
 ** When used with a GET request, this will retrieve active users. If a room ID is provided, it will retrieve the active users in a given room. If a room ID is omitted, it will retrieve active users across the entire server.
 ** When used with a PUT request, this will replace the logged-in user's status with a new status.
 *
 * = Update User Status Directives: =
 * @param list   $roomIds A list of room IDs to update a user's status to.
 * @param string $status  One of "away," "busy," "available," "invisible," and "offline," with "available" default. The former three are primarily cosmetic; "invisible" indicates that a user will only appear as an active user in the active users list of a private room (and thus is not shown in general room active users lists, or the global active users list), and "offline" indicates that a user is logging off or exiting a room; if sent, a user's previous status (whatever it is) will be removed. Full support for statuses is not yet implemented.
 * @param bool   $typing  Whether a user is typing. In practice, this should only be called for a single room, though we don't necessarily enforce the change. (If used with "offline", it is discarded. If used with any other status, it will be exposed in the active users list unless a user is invisible and in a non-private room.)
 *
 * = Get User Status Directives: =
 * @param list $roomIds Retrieve the list of users active in these rooms. If omitted, the users active site-wide will be retrieved.
 * @param list $userIds Restrict the active users result to these users, if specified.
 */

$apiRequest = true;
require('../global.php');
define('API_INUSERSTATUS', true);


/* Header parameters -- identifies what we're doing as well as the message itself, if applicable. */
$requestHead = fim_sanitizeGPC('g', [
    '_action' => [],
]);

if ($requestHead['_action'] === 'edit') {
    $requestHead = array_merge($requestHead, fim_sanitizeGPC('g',
        ['roomIds' => [
            'cast' => 'list',
            'filter' => 'roomId',
            'require' => true,
        ]
    ]));
}



/* Load the correct file to perform the action */
switch ($requestHead['_action']) {
    case 'edit':
        require('userStatus/editUserStatus.php');
    break;

    case 'get':
        require('userStatus/getActiveUsers.php');
    break;
}

?>
